version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-ai-pdf-backend
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - PDF_PATH=/app/data/pdfs
      - CHROMA_DB_PATH=/app/data/chroma_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LMSTUDIO_API_KEY=${LMSTUDIO_API_KEY}
      - ENVIRONMENT=production
      - DEBUG=false
    volumes:
      # Volume pour les PDFs uploadés
      - ./data/pdfs:/app/data/pdfs
      # Volume pour la base de données ChromaDB
      - ./data/chroma_db:/app/data/chroma_db
      # Volume pour les logs (optionnel)
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/stat?user_id=healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chat-ai-network

  # Service de développement (optionnel)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-ai-pdf-backend-dev
    ports:
      - "8001:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - PDF_PATH=/app/data/pdfs
      - CHROMA_DB_PATH=/app/data/chroma_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LMSTUDIO_API_KEY=${LMSTUDIO_API_KEY}
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - ./data/pdfs:/app/data/pdfs
      - ./data/chroma_db:/app/data/chroma_db
      - ./logs:/app/logs
      # Volume pour le développement (montage du code source)
      - .:/app
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - chat-ai-network

networks:
  chat-ai-network:
    driver: bridge

volumes:
  pdfs_data:
  chroma_db_data: 